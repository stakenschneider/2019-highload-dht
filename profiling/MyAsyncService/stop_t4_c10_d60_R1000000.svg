<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="581"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="581"> </text>
<g id="frames">
<g>
<title>all (36 samples, 100.00%)</title><rect x="10.0" y="547.0" width="1180.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="13.0" y="558.0">all</text>
</g>
<g>
<title>[NIO Acceptor 0.0.0.0:8080 tid=26627] (5 samples, 13.89%)</title><rect x="10.0" y="531.0" width="163.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="13.0" y="542.0">[NIO Acceptor 0.0.0.0..</text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (5 samples, 13.89%)</title><rect x="10.0" y="515.0" width="163.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="526.0">one/nio/server/Accept..</text>
</g>
<g>
<title>one/nio/net/Socket.acceptNonBlocking (5 samples, 13.89%)</title><rect x="10.0" y="499.0" width="163.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="510.0">one/nio/net/Socket.ac..</text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (5 samples, 13.89%)</title><rect x="10.0" y="483.0" width="163.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="494.0">one/nio/net/JavaServe..</text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (5 samples, 13.89%)</title><rect x="10.0" y="467.0" width="163.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="478.0">one/nio/net/JavaServe..</text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (5 samples, 13.89%)</title><rect x="10.0" y="451.0" width="163.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="462.0">sun/nio/ch/ServerSock..</text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (4 samples, 11.11%)</title><rect x="42.8" y="435.0" width="131.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="45.8" y="446.0">sun/nio/ch/Serve..</text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept0 (4 samples, 11.11%)</title><rect x="42.8" y="419.0" width="131.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="45.8" y="430.0">sun/nio/ch/Serve..</text>
</g>
<g>
<title>__accept (4 samples, 11.11%)</title><rect x="42.8" y="403.0" width="131.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="45.8" y="414.0">__accept</text>
</g>
<g>
<title>[NIO Selector #0 tid=39171] (3 samples, 8.33%)</title><rect x="173.9" y="531.0" width="98.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="176.9" y="542.0">[NIO Selecto..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3 samples, 8.33%)</title><rect x="173.9" y="515.0" width="98.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="176.9" y="526.0">one/nio/serv..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (3 samples, 8.33%)</title><rect x="173.9" y="499.0" width="98.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="176.9" y="510.0">one/nio/net/..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (3 samples, 8.33%)</title><rect x="173.9" y="483.0" width="98.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="176.9" y="494.0">sun/nio/ch/S..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (3 samples, 8.33%)</title><rect x="173.9" y="467.0" width="98.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="176.9" y="478.0">sun/nio/ch/S..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (3 samples, 8.33%)</title><rect x="173.9" y="451.0" width="98.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="176.9" y="462.0">sun/nio/ch/K..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (2 samples, 5.56%)</title><rect x="173.9" y="435.0" width="65.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="176.9" y="446.0">sun/nio..</text>
</g>
<g>
<title>kevent (2 samples, 5.56%)</title><rect x="173.9" y="419.0" width="65.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="176.9" y="430.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (1 samples, 2.78%)</title><rect x="239.4" y="435.0" width="32.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="242.4" y="446.0">su..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.register (1 samples, 2.78%)</title><rect x="239.4" y="419.0" width="32.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="242.4" y="430.0">su..</text>
</g>
<g>
<title>kevent (1 samples, 2.78%)</title><rect x="239.4" y="403.0" width="32.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="242.4" y="414.0">ke..</text>
</g>
<g>
<title>[NIO Selector #1 tid=25347] (3 samples, 8.33%)</title><rect x="272.2" y="531.0" width="98.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="275.2" y="542.0">[NIO Selecto..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3 samples, 8.33%)</title><rect x="272.2" y="515.0" width="98.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="275.2" y="526.0">one/nio/serv..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (2 samples, 5.56%)</title><rect x="272.2" y="499.0" width="65.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="275.2" y="510.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (1 samples, 2.78%)</title><rect x="272.2" y="483.0" width="32.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="275.2" y="494.0">on..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (1 samples, 2.78%)</title><rect x="272.2" y="467.0" width="32.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="275.2" y="478.0">ja..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.register (1 samples, 2.78%)</title><rect x="272.2" y="451.0" width="32.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="275.2" y="462.0">su..</text>
</g>
<g>
<title>java/nio/channels/SelectionKey.attach (1 samples, 2.78%)</title><rect x="272.2" y="435.0" width="32.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="275.2" y="446.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.getAndSet (1 samples, 2.78%)</title><rect x="272.2" y="419.0" width="32.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="275.2" y="430.0">ja..</text>
</g>
<g>
<title>[unknown] (1 samples, 2.78%)</title><rect x="272.2" y="403.0" width="32.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="275.2" y="414.0">[u..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (1 samples, 2.78%)</title><rect x="305.0" y="483.0" width="32.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="308.0" y="494.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1 samples, 2.78%)</title><rect x="305.0" y="467.0" width="32.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="308.0" y="478.0">su..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (1 samples, 2.78%)</title><rect x="305.0" y="451.0" width="32.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="308.0" y="462.0">su..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (1 samples, 2.78%)</title><rect x="305.0" y="435.0" width="32.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="308.0" y="446.0">su..</text>
</g>
<g>
<title>kevent (1 samples, 2.78%)</title><rect x="305.0" y="419.0" width="32.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="308.0" y="430.0">ke..</text>
</g>
<g>
<title>one/nio/net/Session.process (1 samples, 2.78%)</title><rect x="337.8" y="499.0" width="32.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="340.8" y="510.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1 samples, 2.78%)</title><rect x="337.8" y="483.0" width="32.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="340.8" y="494.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 2.78%)</title><rect x="337.8" y="467.0" width="32.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="340.8" y="478.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1 samples, 2.78%)</title><rect x="337.8" y="451.0" width="32.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="340.8" y="462.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 2.78%)</title><rect x="337.8" y="435.0" width="32.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="340.8" y="446.0">on..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/MyAsyncService.handleDefault (1 samples, 2.78%)</title><rect x="337.8" y="419.0" width="32.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="340.8" y="430.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendError (1 samples, 2.78%)</title><rect x="337.8" y="403.0" width="32.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="340.8" y="414.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.scheduleClose (1 samples, 2.78%)</title><rect x="337.8" y="387.0" width="32.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="340.8" y="398.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.close (1 samples, 2.78%)</title><rect x="337.8" y="371.0" width="32.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="340.8" y="382.0">on..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.close (1 samples, 2.78%)</title><rect x="337.8" y="355.0" width="32.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="340.8" y="366.0">on..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (1 samples, 2.78%)</title><rect x="337.8" y="339.0" width="32.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="340.8" y="350.0">ja..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.implCloseChannel (1 samples, 2.78%)</title><rect x="337.8" y="323.0" width="32.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="340.8" y="334.0">ja..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.implCloseSelectableChannel (1 samples, 2.78%)</title><rect x="337.8" y="307.0" width="32.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="340.8" y="318.0">su..</text>
</g>
<g>
<title>sun/nio/ch/Net.shutdown (1 samples, 2.78%)</title><rect x="337.8" y="291.0" width="32.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="340.8" y="302.0">su..</text>
</g>
<g>
<title>shutdown (1 samples, 2.78%)</title><rect x="337.8" y="275.0" width="32.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="340.8" y="286.0">sh..</text>
</g>
<g>
<title>[NIO Selector #2 tid=38659] (4 samples, 11.11%)</title><rect x="370.6" y="531.0" width="131.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="373.6" y="542.0">[NIO Selector #2..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (4 samples, 11.11%)</title><rect x="370.6" y="515.0" width="131.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="373.6" y="526.0">one/nio/server/S..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (4 samples, 11.11%)</title><rect x="370.6" y="499.0" width="131.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="373.6" y="510.0">one/nio/net/Java..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (4 samples, 11.11%)</title><rect x="370.6" y="483.0" width="131.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="373.6" y="494.0">sun/nio/ch/Selec..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (4 samples, 11.11%)</title><rect x="370.6" y="467.0" width="131.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="373.6" y="478.0">sun/nio/ch/Selec..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (4 samples, 11.11%)</title><rect x="370.6" y="451.0" width="131.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="373.6" y="462.0">sun/nio/ch/KQueu..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (3 samples, 8.33%)</title><rect x="370.6" y="435.0" width="98.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="373.6" y="446.0">sun/nio/ch/K..</text>
</g>
<g>
<title>kevent (3 samples, 8.33%)</title><rect x="370.6" y="419.0" width="98.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="373.6" y="430.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 2.78%)</title><rect x="468.9" y="435.0" width="32.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="471.9" y="446.0">su..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.implDereg (1 samples, 2.78%)</title><rect x="468.9" y="419.0" width="32.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="471.9" y="430.0">su..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.register (1 samples, 2.78%)</title><rect x="468.9" y="403.0" width="32.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="471.9" y="414.0">su..</text>
</g>
<g>
<title>[NIO Selector #3 tid=26115] (3 samples, 8.33%)</title><rect x="501.7" y="531.0" width="98.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="504.7" y="542.0">[NIO Selecto..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3 samples, 8.33%)</title><rect x="501.7" y="515.0" width="98.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="504.7" y="526.0">one/nio/serv..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (2 samples, 5.56%)</title><rect x="501.7" y="499.0" width="65.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="504.7" y="510.0">one/nio..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (2 samples, 5.56%)</title><rect x="501.7" y="483.0" width="65.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="504.7" y="494.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (2 samples, 5.56%)</title><rect x="501.7" y="467.0" width="65.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="504.7" y="478.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (2 samples, 5.56%)</title><rect x="501.7" y="451.0" width="65.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="504.7" y="462.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (2 samples, 5.56%)</title><rect x="501.7" y="435.0" width="65.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="504.7" y="446.0">sun/nio..</text>
</g>
<g>
<title>kevent (2 samples, 5.56%)</title><rect x="501.7" y="419.0" width="65.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="504.7" y="430.0">kevent</text>
</g>
<g>
<title>one/nio/net/Session.process (1 samples, 2.78%)</title><rect x="567.2" y="499.0" width="32.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="570.2" y="510.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1 samples, 2.78%)</title><rect x="567.2" y="483.0" width="32.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="570.2" y="494.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 2.78%)</title><rect x="567.2" y="467.0" width="32.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="570.2" y="478.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1 samples, 2.78%)</title><rect x="567.2" y="451.0" width="32.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="570.2" y="462.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 2.78%)</title><rect x="567.2" y="435.0" width="32.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="570.2" y="446.0">on..</text>
</g>
<g>
<title>ru/mail/polis/service/stakenschneider/MyAsyncService.handleDefault (1 samples, 2.78%)</title><rect x="567.2" y="419.0" width="32.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="570.2" y="430.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendError (1 samples, 2.78%)</title><rect x="567.2" y="403.0" width="32.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="570.2" y="414.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.scheduleClose (1 samples, 2.78%)</title><rect x="567.2" y="387.0" width="32.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="570.2" y="398.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.close (1 samples, 2.78%)</title><rect x="567.2" y="371.0" width="32.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="570.2" y="382.0">on..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.close (1 samples, 2.78%)</title><rect x="567.2" y="355.0" width="32.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="570.2" y="366.0">on..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (1 samples, 2.78%)</title><rect x="567.2" y="339.0" width="32.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="570.2" y="350.0">ja..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.implCloseChannel (1 samples, 2.78%)</title><rect x="567.2" y="323.0" width="32.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="570.2" y="334.0">ja..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.implCloseSelectableChannel (1 samples, 2.78%)</title><rect x="567.2" y="307.0" width="32.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="570.2" y="318.0">su..</text>
</g>
<g>
<title>sun/nio/ch/Net.getSocketOption (1 samples, 2.78%)</title><rect x="567.2" y="291.0" width="32.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="570.2" y="302.0">su..</text>
</g>
<g>
<title>sun/nio/ch/Net.getIntOption0 (1 samples, 2.78%)</title><rect x="567.2" y="275.0" width="32.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="570.2" y="286.0">su..</text>
</g>
<g>
<title>Java_sun_nio_ch_Net_getIntOption0 (1 samples, 2.78%)</title><rect x="567.2" y="259.0" width="32.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="570.2" y="270.0">Ja..</text>
</g>
<g>
<title>getsockopt (1 samples, 2.78%)</title><rect x="567.2" y="243.0" width="32.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="570.2" y="254.0">ge..</text>
</g>
<g>
<title>[tid=13315] (1 samples, 2.78%)</title><rect x="600.0" y="531.0" width="32.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="603.0" y="542.0">[t..</text>
</g>
<g>
<title>thread_start (1 samples, 2.78%)</title><rect x="600.0" y="515.0" width="32.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="603.0" y="526.0">th..</text>
</g>
<g>
<title>_pthread_start (1 samples, 2.78%)</title><rect x="600.0" y="499.0" width="32.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="603.0" y="510.0">_p..</text>
</g>
<g>
<title>_pthread_body (1 samples, 2.78%)</title><rect x="600.0" y="483.0" width="32.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="603.0" y="494.0">_p..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 2.78%)</title><rect x="600.0" y="467.0" width="32.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="603.0" y="478.0">th..</text>
</g>
<g>
<title>Thread::call_run() (1 samples, 2.78%)</title><rect x="600.0" y="451.0" width="32.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="603.0" y="462.0">Th..</text>
</g>
<g>
<title>ConcurrentGCThread::run() (1 samples, 2.78%)</title><rect x="600.0" y="435.0" width="32.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="603.0" y="446.0">Co..</text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (1 samples, 2.78%)</title><rect x="600.0" y="419.0" width="32.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="603.0" y="430.0">G1..</text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::sleep_before_next_cycle() (1 samples, 2.78%)</title><rect x="600.0" y="403.0" width="32.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="603.0" y="414.0">G1..</text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 2.78%)</title><rect x="600.0" y="387.0" width="32.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="603.0" y="398.0">Mo..</text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 2.78%)</title><rect x="600.0" y="371.0" width="32.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="603.0" y="382.0">Mo..</text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 2.78%)</title><rect x="600.0" y="355.0" width="32.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="603.0" y="366.0">os..</text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 2.78%)</title><rect x="600.0" y="339.0" width="32.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="603.0" y="350.0">__..</text>
</g>
<g>
<title>[tid=20739] (1 samples, 2.78%)</title><rect x="632.8" y="531.0" width="32.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="635.8" y="542.0">[t..</text>
</g>
<g>
<title>thread_start (1 samples, 2.78%)</title><rect x="632.8" y="515.0" width="32.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="635.8" y="526.0">th..</text>
</g>
<g>
<title>_pthread_start (1 samples, 2.78%)</title><rect x="632.8" y="499.0" width="32.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="635.8" y="510.0">_p..</text>
</g>
<g>
<title>_pthread_body (1 samples, 2.78%)</title><rect x="632.8" y="483.0" width="32.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="635.8" y="494.0">_p..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 2.78%)</title><rect x="632.8" y="467.0" width="32.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="635.8" y="478.0">th..</text>
</g>
<g>
<title>Thread::call_run() (1 samples, 2.78%)</title><rect x="632.8" y="451.0" width="32.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="635.8" y="462.0">Th..</text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 2.78%)</title><rect x="632.8" y="435.0" width="32.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="635.8" y="446.0">Ga..</text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (1 samples, 2.78%)</title><rect x="632.8" y="419.0" width="32.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="635.8" y="430.0">Pa..</text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 2.78%)</title><rect x="632.8" y="403.0" width="32.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="635.8" y="414.0">Th..</text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) (1 samples, 2.78%)</title><rect x="632.8" y="387.0" width="32.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="635.8" y="398.0">Ja..</text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 2.78%)</title><rect x="632.8" y="371.0" width="32.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="635.8" y="382.0">fr..</text>
</g>
<g>
<title>frame::sender_for_interpreter_frame(RegisterMap*) const (1 samples, 2.78%)</title><rect x="632.8" y="355.0" width="32.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="635.8" y="366.0">fr..</text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 2.78%)</title><rect x="632.8" y="339.0" width="32.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="635.8" y="350.0">Co..</text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 2.78%)</title><rect x="632.8" y="323.0" width="32.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="635.8" y="334.0">Co..</text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 2.78%)</title><rect x="632.8" y="307.0" width="32.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="635.8" y="318.0">Co..</text>
</g>
<g>
<title>[tid=22531] (7 samples, 19.44%)</title><rect x="665.6" y="531.0" width="229.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="668.6" y="542.0">[tid=22531]</text>
</g>
<g>
<title>thread_start (7 samples, 19.44%)</title><rect x="665.6" y="515.0" width="229.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="668.6" y="526.0">thread_start</text>
</g>
<g>
<title>_pthread_start (7 samples, 19.44%)</title><rect x="665.6" y="499.0" width="229.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="668.6" y="510.0">_pthread_start</text>
</g>
<g>
<title>_pthread_body (7 samples, 19.44%)</title><rect x="665.6" y="483.0" width="229.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="668.6" y="494.0">_pthread_body</text>
</g>
<g>
<title>thread_native_entry(Thread*) (7 samples, 19.44%)</title><rect x="665.6" y="467.0" width="229.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="668.6" y="478.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (7 samples, 19.44%)</title><rect x="665.6" y="451.0" width="229.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="668.6" y="462.0">Thread::call_run()</text>
</g>
<g>
<title>JavaThread::run() (7 samples, 19.44%)</title><rect x="665.6" y="435.0" width="229.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="668.6" y="446.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (7 samples, 19.44%)</title><rect x="665.6" y="419.0" width="229.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="668.6" y="430.0">JavaThread::thread_main_inner()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (7 samples, 19.44%)</title><rect x="665.6" y="403.0" width="229.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="668.6" y="414.0">CompileBroker::compiler_thread..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (6 samples, 16.67%)</title><rect x="665.6" y="387.0" width="196.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="668.6" y="398.0">CompileBroker::invoke_comp..</text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (6 samples, 16.67%)</title><rect x="665.6" y="371.0" width="196.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="668.6" y="382.0">Compiler::compile_method(c..</text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (6 samples, 16.67%)</title><rect x="665.6" y="355.0" width="196.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="668.6" y="366.0">Compilation::Compilation(A..</text>
</g>
<g>
<title>Compilation::compile_method() (6 samples, 16.67%)</title><rect x="665.6" y="339.0" width="196.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="668.6" y="350.0">Compilation::compile_metho..</text>
</g>
<g>
<title>Compilation::compile_java_method() (5 samples, 13.89%)</title><rect x="665.6" y="323.0" width="163.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="668.6" y="334.0">Compilation::compile_..</text>
</g>
<g>
<title>Compilation::build_hir() (4 samples, 11.11%)</title><rect x="665.6" y="307.0" width="131.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="668.6" y="318.0">Compilation::bui..</text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (3 samples, 8.33%)</title><rect x="665.6" y="291.0" width="98.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="668.6" y="302.0">IR::IR(Compi..</text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (3 samples, 8.33%)</title><rect x="665.6" y="275.0" width="98.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="668.6" y="286.0">IRScope::IRS..</text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (3 samples, 8.33%)</title><rect x="665.6" y="259.0" width="98.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="668.6" y="270.0">GraphBuilder..</text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (3 samples, 8.33%)</title><rect x="665.6" y="243.0" width="98.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="668.6" y="254.0">GraphBuilder..</text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (3 samples, 8.33%)</title><rect x="665.6" y="227.0" width="98.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="668.6" y="238.0">GraphBuilder..</text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (3 samples, 8.33%)</title><rect x="665.6" y="211.0" width="98.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="668.6" y="222.0">GraphBuilder..</text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 5.56%)</title><rect x="665.6" y="195.0" width="65.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="668.6" y="206.0">ciBytec..</text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 5.56%)</title><rect x="665.6" y="179.0" width="65.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="668.6" y="190.0">ciEnv::..</text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 2.78%)</title><rect x="665.6" y="163.0" width="32.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="668.6" y="174.0">ci..</text>
</g>
<g>
<title>LinkResolver::resolve_static_call_or_null(LinkInfo const&amp;) (1 samples, 2.78%)</title><rect x="665.6" y="147.0" width="32.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="668.6" y="158.0">Li..</text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 2.78%)</title><rect x="665.6" y="131.0" width="32.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="668.6" y="142.0">Li..</text>
</g>
<g>
<title>LinkResolver::linktime_resolve_static_method(LinkInfo const&amp;, Thread*) (1 samples, 2.78%)</title><rect x="665.6" y="115.0" width="32.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="668.6" y="126.0">Li..</text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 2.78%)</title><rect x="665.6" y="99.0" width="32.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="668.6" y="110.0">Li..</text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 2.78%)</title><rect x="665.6" y="83.0" width="32.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="668.6" y="94.0">Li..</text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 2.78%)</title><rect x="665.6" y="67.0" width="32.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="668.6" y="78.0">In..</text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 2.78%)</title><rect x="665.6" y="51.0" width="32.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="668.6" y="62.0">In..</text>
</g>
<g>
<title>binary_search(Array&lt;Method*&gt; const*, Symbol const*) (1 samples, 2.78%)</title><rect x="665.6" y="35.0" width="32.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="668.6" y="46.0">bi..</text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 2.78%)</title><rect x="698.3" y="163.0" width="32.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="701.3" y="174.0">ci..</text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 2.78%)</title><rect x="698.3" y="147.0" width="32.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="701.3" y="158.0">ci..</text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 2.78%)</title><rect x="698.3" y="131.0" width="32.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="701.3" y="142.0">ci..</text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 2.78%)</title><rect x="698.3" y="115.0" width="32.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="701.3" y="126.0">ci..</text>
</g>
<g>
<title>vmSymbols::find_sid(Symbol const*) (1 samples, 2.78%)</title><rect x="698.3" y="99.0" width="32.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="701.3" y="110.0">vm..</text>
</g>
<g>
<title>ciMethod::find_monomorphic_target(ciInstanceKlass*, ciInstanceKlass*, ciInstanceKlass*, bool) (1 samples, 2.78%)</title><rect x="731.1" y="195.0" width="32.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="734.1" y="206.0">ci..</text>
</g>
<g>
<title>Dependencies::find_unique_concrete_method(Klass*, Method*) (1 samples, 2.78%)</title><rect x="731.1" y="179.0" width="32.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="734.1" y="190.0">De..</text>
</g>
<g>
<title>ClassHierarchyWalker::find_witness_anywhere(Klass*, bool, bool) (1 samples, 2.78%)</title><rect x="731.1" y="163.0" width="32.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="734.1" y="174.0">Cl..</text>
</g>
<g>
<title>ClassHierarchyWalker::is_witness(Klass*) (1 samples, 2.78%)</title><rect x="731.1" y="147.0" width="32.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="734.1" y="158.0">Cl..</text>
</g>
<g>
<title>InstanceKlass::find_instance_method(Symbol const*, Symbol const*, Klass::PrivateLookupMode) const (1 samples, 2.78%)</title><rect x="731.1" y="131.0" width="32.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="734.1" y="142.0">In..</text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 2.78%)</title><rect x="731.1" y="115.0" width="32.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="734.1" y="126.0">In..</text>
</g>
<g>
<title>binary_search(Array&lt;Method*&gt; const*, Symbol const*) (1 samples, 2.78%)</title><rect x="731.1" y="99.0" width="32.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="734.1" y="110.0">bi..</text>
</g>
<g>
<title>IR::compute_code() (1 samples, 2.78%)</title><rect x="763.9" y="291.0" width="32.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="766.9" y="302.0">IR..</text>
</g>
<g>
<title>ComputeLinearScanOrder::ComputeLinearScanOrder(Compilation*, BlockBegin*) (1 samples, 2.78%)</title><rect x="763.9" y="275.0" width="32.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="766.9" y="286.0">Co..</text>
</g>
<g>
<title>ComputeLinearScanOrder::compute_order(BlockBegin*) (1 samples, 2.78%)</title><rect x="763.9" y="259.0" width="32.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="766.9" y="270.0">Co..</text>
</g>
<g>
<title>ComputeLinearScanOrder::sort_into_work_list(BlockBegin*) (1 samples, 2.78%)</title><rect x="763.9" y="243.0" width="32.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="766.9" y="254.0">Co..</text>
</g>
<g>
<title>Instruction::as_Throw() (1 samples, 2.78%)</title><rect x="763.9" y="227.0" width="32.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="766.9" y="238.0">In..</text>
</g>
<g>
<title>Compilation::emit_lir() (1 samples, 2.78%)</title><rect x="796.7" y="307.0" width="32.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="799.7" y="318.0">Co..</text>
</g>
<g>
<title>LinearScan::do_linear_scan() (1 samples, 2.78%)</title><rect x="796.7" y="291.0" width="32.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="799.7" y="302.0">Li..</text>
</g>
<g>
<title>LinearScan::build_intervals() (1 samples, 2.78%)</title><rect x="796.7" y="275.0" width="32.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="799.7" y="286.0">Li..</text>
</g>
<g>
<title>LinearScan::add_use(LIR_OprDesc*, int, int, IntervalUseKind) (1 samples, 2.78%)</title><rect x="796.7" y="259.0" width="32.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="799.7" y="270.0">Li..</text>
</g>
<g>
<title>Compilation::initialize() (1 samples, 2.78%)</title><rect x="829.4" y="323.0" width="32.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="832.4" y="334.0">Co..</text>
</g>
<g>
<title>DebugInformationRecorder::DebugInformationRecorder(OopRecorder*) (1 samples, 2.78%)</title><rect x="829.4" y="307.0" width="32.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="832.4" y="318.0">De..</text>
</g>
<g>
<title>GrowableArray&lt;DIR_Chunk*&gt;::GrowableArray(int, bool, MemoryType) (1 samples, 2.78%)</title><rect x="829.4" y="291.0" width="32.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="832.4" y="302.0">Gr..</text>
</g>
<g>
<title>CompileQueue::get() (1 samples, 2.78%)</title><rect x="862.2" y="387.0" width="32.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="865.2" y="398.0">Co..</text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 2.78%)</title><rect x="862.2" y="371.0" width="32.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="865.2" y="382.0">Mo..</text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 2.78%)</title><rect x="862.2" y="355.0" width="32.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="865.2" y="366.0">Mo..</text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 2.78%)</title><rect x="862.2" y="339.0" width="32.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="865.2" y="350.0">os..</text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 2.78%)</title><rect x="862.2" y="323.0" width="32.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="865.2" y="334.0">__..</text>
</g>
<g>
<title>[tid=22787] (2 samples, 5.56%)</title><rect x="895.0" y="531.0" width="65.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="898.0" y="542.0">[tid=22..</text>
</g>
<g>
<title>thread_start (2 samples, 5.56%)</title><rect x="895.0" y="515.0" width="65.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="898.0" y="526.0">thread_..</text>
</g>
<g>
<title>_pthread_start (2 samples, 5.56%)</title><rect x="895.0" y="499.0" width="65.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="898.0" y="510.0">_pthrea..</text>
</g>
<g>
<title>_pthread_body (2 samples, 5.56%)</title><rect x="895.0" y="483.0" width="65.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="898.0" y="494.0">_pthrea..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 5.56%)</title><rect x="895.0" y="467.0" width="65.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="898.0" y="478.0">thread_..</text>
</g>
<g>
<title>Thread::call_run() (2 samples, 5.56%)</title><rect x="895.0" y="451.0" width="65.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="898.0" y="462.0">Thread:..</text>
</g>
<g>
<title>JavaThread::run() (2 samples, 5.56%)</title><rect x="895.0" y="435.0" width="65.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="898.0" y="446.0">JavaThr..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (2 samples, 5.56%)</title><rect x="895.0" y="419.0" width="65.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="898.0" y="430.0">JavaThr..</text>
</g>
<g>
<title>NMethodSweeper::sweeper_loop() (2 samples, 5.56%)</title><rect x="895.0" y="403.0" width="65.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="898.0" y="414.0">NMethod..</text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 2.78%)</title><rect x="895.0" y="387.0" width="32.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="898.0" y="398.0">Mo..</text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 2.78%)</title><rect x="895.0" y="371.0" width="32.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="898.0" y="382.0">Mo..</text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 2.78%)</title><rect x="895.0" y="355.0" width="32.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="898.0" y="366.0">os..</text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 2.78%)</title><rect x="895.0" y="339.0" width="32.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="898.0" y="350.0">__..</text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (1 samples, 2.78%)</title><rect x="927.8" y="387.0" width="32.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="930.8" y="398.0">NM..</text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (1 samples, 2.78%)</title><rect x="927.8" y="371.0" width="32.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="930.8" y="382.0">NM..</text>
</g>
<g>
<title>NMethodSweeper::process_compiled_method(CompiledMethod*) (1 samples, 2.78%)</title><rect x="927.8" y="355.0" width="32.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="930.8" y="366.0">NM..</text>
</g>
<g>
<title>CompiledMethod::cleanup_inline_caches(bool) (1 samples, 2.78%)</title><rect x="927.8" y="339.0" width="32.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="930.8" y="350.0">Co..</text>
</g>
<g>
<title>CompiledICLocker::CompiledICLocker(CompiledMethod*) (1 samples, 2.78%)</title><rect x="927.8" y="323.0" width="32.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="930.8" y="334.0">Co..</text>
</g>
<g>
<title>DefaultICProtectionBehaviour::lock(CompiledMethod*) (1 samples, 2.78%)</title><rect x="927.8" y="307.0" width="32.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="930.8" y="318.0">De..</text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 2.78%)</title><rect x="927.8" y="291.0" width="32.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="930.8" y="302.0">Mo..</text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 2.78%)</title><rect x="927.8" y="275.0" width="32.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="930.8" y="286.0">Mo..</text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 2.78%)</title><rect x="927.8" y="259.0" width="32.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="930.8" y="270.0">os..</text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 2.78%)</title><rect x="927.8" y="243.0" width="32.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="930.8" y="254.0">__..</text>
</g>
<g>
<title>[tid=40963] (2 samples, 5.56%)</title><rect x="960.6" y="531.0" width="65.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="963.6" y="542.0">[tid=40..</text>
</g>
<g>
<title>thread_start (2 samples, 5.56%)</title><rect x="960.6" y="515.0" width="65.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="963.6" y="526.0">thread_..</text>
</g>
<g>
<title>_pthread_start (2 samples, 5.56%)</title><rect x="960.6" y="499.0" width="65.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="963.6" y="510.0">_pthrea..</text>
</g>
<g>
<title>_pthread_body (2 samples, 5.56%)</title><rect x="960.6" y="483.0" width="65.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="963.6" y="494.0">_pthrea..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 5.56%)</title><rect x="960.6" y="467.0" width="65.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="963.6" y="478.0">thread_..</text>
</g>
<g>
<title>Thread::call_run() (2 samples, 5.56%)</title><rect x="960.6" y="451.0" width="65.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="963.6" y="462.0">Thread:..</text>
</g>
<g>
<title>JavaThread::run() (2 samples, 5.56%)</title><rect x="960.6" y="435.0" width="65.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="963.6" y="446.0">JavaThr..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (2 samples, 5.56%)</title><rect x="960.6" y="419.0" width="65.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="963.6" y="430.0">JavaThr..</text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (2 samples, 5.56%)</title><rect x="960.6" y="403.0" width="65.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="963.6" y="414.0">Service..</text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (1 samples, 2.78%)</title><rect x="960.6" y="387.0" width="32.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="963.6" y="398.0">Jv..</text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (1 samples, 2.78%)</title><rect x="960.6" y="371.0" width="32.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="963.6" y="382.0">Jv..</text>
</g>
<g>
<title>JvmtiJavaThreadEventTransition::JvmtiJavaThreadEventTransition(JavaThread*) (1 samples, 2.78%)</title><rect x="960.6" y="355.0" width="32.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="963.6" y="366.0">Jv..</text>
</g>
<g>
<title>ThreadToNativeFromVM::ThreadToNativeFromVM(JavaThread*) (1 samples, 2.78%)</title><rect x="960.6" y="339.0" width="32.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="963.6" y="350.0">Th..</text>
</g>
<g>
<title>InterfaceSupport::serialize_thread_state_internal(JavaThread*, bool) (1 samples, 2.78%)</title><rect x="960.6" y="323.0" width="32.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="963.6" y="334.0">In..</text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 2.78%)</title><rect x="993.3" y="387.0" width="32.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="996.3" y="398.0">Mo..</text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 2.78%)</title><rect x="993.3" y="371.0" width="32.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="996.3" y="382.0">Mo..</text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 2.78%)</title><rect x="993.3" y="355.0" width="32.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="996.3" y="366.0">os..</text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 2.78%)</title><rect x="993.3" y="339.0" width="32.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="996.3" y="350.0">__..</text>
</g>
<g>
<title>[tid=43267] (5 samples, 13.89%)</title><rect x="1026.1" y="531.0" width="163.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1029.1" y="542.0">[tid=43267]</text>
</g>
<g>
<title>thread_start (5 samples, 13.89%)</title><rect x="1026.1" y="515.0" width="163.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1029.1" y="526.0">thread_start</text>
</g>
<g>
<title>_pthread_start (5 samples, 13.89%)</title><rect x="1026.1" y="499.0" width="163.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1029.1" y="510.0">_pthread_start</text>
</g>
<g>
<title>_pthread_body (5 samples, 13.89%)</title><rect x="1026.1" y="483.0" width="163.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1029.1" y="494.0">_pthread_body</text>
</g>
<g>
<title>thread_native_entry(Thread*) (5 samples, 13.89%)</title><rect x="1026.1" y="467.0" width="163.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1029.1" y="478.0">thread_native_entry(T..</text>
</g>
<g>
<title>Thread::call_run() (5 samples, 13.89%)</title><rect x="1026.1" y="451.0" width="163.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1029.1" y="462.0">Thread::call_run()</text>
</g>
<g>
<title>JavaThread::run() (5 samples, 13.89%)</title><rect x="1026.1" y="435.0" width="163.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1029.1" y="446.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (5 samples, 13.89%)</title><rect x="1026.1" y="419.0" width="163.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1029.1" y="430.0">JavaThread::thread_ma..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (5 samples, 13.89%)</title><rect x="1026.1" y="403.0" width="163.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1029.1" y="414.0">CompileBroker::compil..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (5 samples, 13.89%)</title><rect x="1026.1" y="387.0" width="163.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1029.1" y="398.0">CompileBroker::invoke..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (5 samples, 13.89%)</title><rect x="1026.1" y="371.0" width="163.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1029.1" y="382.0">C2Compiler::compile_m..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (5 samples, 13.89%)</title><rect x="1026.1" y="355.0" width="163.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1029.1" y="366.0">Compile::Compile(ciEn..</text>
</g>
<g>
<title>Compile::Code_Gen() (3 samples, 8.33%)</title><rect x="1026.1" y="339.0" width="98.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1029.1" y="350.0">Compile::Cod..</text>
</g>
<g>
<title>Compile::Output() (1 samples, 2.78%)</title><rect x="1026.1" y="323.0" width="32.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1029.1" y="334.0">Co..</text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (1 samples, 2.78%)</title><rect x="1026.1" y="307.0" width="32.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1029.1" y="318.0">Co..</text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (1 samples, 2.78%)</title><rect x="1026.1" y="291.0" width="32.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1029.1" y="302.0">Co..</text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (1 samples, 2.78%)</title><rect x="1026.1" y="275.0" width="32.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1029.1" y="286.0">Co..</text>
</g>
<g>
<title>CodeBuffer::CodeBuffer(unsigned char*, int) (1 samples, 2.78%)</title><rect x="1026.1" y="259.0" width="32.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1029.1" y="270.0">Co..</text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (2 samples, 5.56%)</title><rect x="1058.9" y="323.0" width="65.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1061.9" y="334.0">PhaseCh..</text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (1 samples, 2.78%)</title><rect x="1058.9" y="307.0" width="32.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1061.9" y="318.0">Ph..</text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 2.78%)</title><rect x="1091.7" y="307.0" width="32.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1094.7" y="318.0">Ph..</text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 2.78%)</title><rect x="1091.7" y="291.0" width="32.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1094.7" y="302.0">Ph..</text>
</g>
<g>
<title>IndexSet::insert(unsigned int) (1 samples, 2.78%)</title><rect x="1091.7" y="275.0" width="32.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1094.7" y="286.0">In..</text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 2.78%)</title><rect x="1091.7" y="259.0" width="32.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1094.7" y="270.0">In..</text>
</g>
<g>
<title>Compile::Optimize() (2 samples, 5.56%)</title><rect x="1124.4" y="339.0" width="65.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1127.4" y="350.0">Compile..</text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 2.78%)</title><rect x="1124.4" y="323.0" width="32.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1127.4" y="334.0">Ph..</text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 2.78%)</title><rect x="1124.4" y="307.0" width="32.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1127.4" y="318.0">Ph..</text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post_work(Node*, bool) (1 samples, 2.78%)</title><rect x="1124.4" y="291.0" width="32.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1127.4" y="302.0">Ph..</text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (1 samples, 2.78%)</title><rect x="1124.4" y="275.0" width="32.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1127.4" y="286.0">Ph..</text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (1 samples, 2.78%)</title><rect x="1124.4" y="259.0" width="32.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1127.4" y="270.0">Ph..</text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const (1 samples, 2.78%)</title><rect x="1124.4" y="243.0" width="32.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1127.4" y="254.0">Ph..</text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 2.78%)</title><rect x="1157.2" y="323.0" width="32.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1160.2" y="334.0">Ph..</text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 2.78%)</title><rect x="1157.2" y="307.0" width="32.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1160.2" y="318.0">Ph..</text>
</g>
<g>
<title>LoadNode::Value(PhaseGVN*) const (1 samples, 2.78%)</title><rect x="1157.2" y="291.0" width="32.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1160.2" y="302.0">Lo..</text>
</g>
</g>
</svg>
